{"version":3,"file":"colorpicker.js","sourceRoot":"","sources":["../../../src/lib/colorpicker/colorpicker.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    ElementRef,\n    ViewEncapsulation,\n    NgModule,\n    ModuleWithProviders,\n    Directive,\n    OnDestroy,\n    Optional,\n    Renderer,\n    Self,\n    ViewChildren,\n    QueryList,\n    ViewContainerRef\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormsModule,\n    NgControl\n} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport {\n    Overlay,\n    OverlayModule,\n    OverlayState,\n    OverlayRef,\n    Portal,\n    PortalModule,\n    TemplatePortalDirective\n} from '../core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ColorpickerService } from './calculateColor';\nimport { coerceBooleanProperty } from '../core/coercion/boolean-property';\n\nlet nextId = 0;\n\n@Directive({\n    selector: '[text]',\n    host: {\n        '(input)': 'changeInput($event)'\n    }\n})\nexport class TextDirective {\n    @Output('newValue') newValue = new EventEmitter<any>();\n    @Input('text') text: any;\n    @Input('rg') rg: number;\n    changeInput(event: any) {\n        event.stopPropagation();\n        event.preventDefault();\n        let value = event.target.value;\n        if (this.rg === undefined) {\n            this.newValue.emit(value);\n        } else {\n            let numeric = parseFloat(value);\n            if (!isNaN(numeric) && numeric >= 0 && numeric <= this.rg) {\n                this.newValue.emit({ v: numeric, rg: this.rg });\n            }\n        }\n    }\n}\n\n@Directive({\n    selector: '[colorpicker-slider]',\n    host: {\n        '(mousedown)': 'start($event)',\n        '(touchstart)': 'start($event)'\n    }\n})\nexport class ColorpickerSliderDirective {\n    @Input('colorpicker-slider') slider: string;\n    @Input('point-x') pointX: number;\n    @Input('point-y') pointY: number;\n    @Output('change') change = new EventEmitter<any>();\n    private listenerMove: any;\n    private listenerStop: any;\n\n    constructor(private _element: ElementRef) {\n        this.listenerMove = (event: any) => { this.move(event); };\n        this.listenerStop = () => { this.stop(); };\n    }\n\n    /**\n     * set cursor position\n     * @param event\n     */\n    setCursor(event: any) {\n        let height = this._getNativeElement().offsetHeight;\n        let width = this._getNativeElement().offsetWidth;\n        let x = Math.max(0, Math.min(this.getX(event), width));\n        let y = Math.max(0, Math.min(this.getY(event), height));\n\n        if (this.pointX !== undefined && this.pointY !== undefined) {\n            this.change.emit({\n                s: x / width, v: (1 - y / height),\n                pointX: this.pointX, pointY: this.pointY\n            });\n        } else if (this.pointX === undefined && this.pointY !== undefined) {\n            this.change.emit({ v: y / height, rg: this.pointY });\n        } else {\n            this.change.emit({ v: x / width, rg: this.pointX });\n        }\n    }\n\n    /**\n     * input event listner\n     * @param event\n     */\n    move(event: any) {\n        event.preventDefault();\n        this.setCursor(event);\n    }\n\n    /**\n     * input event listner\n     * @param event\n     */\n    start(event: any) {\n        this.setCursor(event);\n        document.addEventListener('mousemove', this.listenerMove);\n        document.addEventListener('touchmove', this.listenerMove);\n        document.addEventListener('mouseup', this.listenerStop);\n        document.addEventListener('touchend', this.listenerStop);\n    }\n\n    /**\n     * stop mouse event\n     */\n    stop() {\n        document.removeEventListener('mousemove', this.listenerMove);\n        document.removeEventListener('touchmove', this.listenerMove);\n        document.removeEventListener('mouseup', this.listenerStop);\n        document.removeEventListener('touchend', this.listenerStop);\n    }\n\n    /**\n     * get x\n     * @param event\n     */\n    getX(event: any) {\n        let boundingClientRect = this._getNativeElement().getBoundingClientRect();\n        return (event.pageX !== undefined ? event.pageX : event.touches[0].pageX) -\n            boundingClientRect.left - window.pageXOffset;\n    }\n\n    /**\n     * get y\n     * @param event\n     */\n    getY(event: any) {\n        let boundingClientRect = this._getNativeElement().getBoundingClientRect();\n        return (event.pageY !== undefined ? event.pageY : event.touches[0].pageY) -\n            boundingClientRect.top - window.pageYOffset;\n    }\n\n    _getNativeElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n/**\n * Change event object emitted by Md2Colorpicker.\n */\nexport class Md2ColorChange {\n    constructor(public source: Md2Colorpicker, public color: string) { }\n}\n\n@Component({\n    moduleId: module.id,\n    selector: 'md2-colorpicker',\n    templateUrl: 'colorpicker.html',\n    styleUrls: ['colorpicker.css'],\n    host: {\n        'role': 'colorpicker',\n        '[id]': 'id',\n        '[tabindex]': 'disabled ? -1 : tabindex',\n        '[class.md2-colorpicker-disabled]': 'disabled',\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class Md2Colorpicker implements OnDestroy, ControlValueAccessor {\n    _innerValue: string = '';\n\n    private _created: boolean;\n    private _defalutColor: string = '#000000';\n    _isColorpickerVisible: boolean;\n    _hueSliderColor: string;\n    private _initialColor: string;\n\n    slider: SliderPosition;\n    private sliderDim: SliderDimension;\n    private hsva: Hsva;\n    rgbaText: Rgba;\n    hslaText: Hsla;\n\n    outputColor: string;\n    alphaColor: string;\n    hexText: string;\n    format: number;\n    backColor: boolean = true;\n\n    private _overlayRef: OverlayRef;\n    private _backdropSubscription: Subscription;\n    private _positionSubscription: Subscription;\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    private _color: string = null;\n\n    /** Whether filling out the select is required in the form.  */\n    private _required: boolean = false;\n\n    /** Whether the select is disabled.  */\n    private _disabled: boolean = false;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string = 'daa';\n    private fontColor: string;\n    private backAreaColor: string;\n\n    _onChange = (value: any) => { };\n    _onTouched = () => { };\n\n    @Input()\n    get color() { return this._color; }\n    set color(value: string) { this._color = value; }\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder() { return this._placeholder; }\n    set placeholder(value: string) { this._placeholder = value; }\n\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n\n    /** Whether the component is disabled. */\n    @Input()\n    get disabled() { return this._disabled; }\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    @Input('format') cFormat: string = 'hex';\n    @Output('colorpickerChange') colorpickerChange = new EventEmitter<string>();\n    /** Event emitted when the selected date has been changed by the user. */\n    @Output() change: EventEmitter<Md2ColorChange> = new EventEmitter<Md2ColorChange>();\n    @Input() tabindex: number = 0;\n    @Input() id: string = 'md2-colorpicker-' + (++nextId);\n\n    get value(): any {\n        return this._innerValue;\n\n    };\n    /**\n    * set accessor including call the onchange callback\n    */\n    set value(v: any) {\n        if (v !== this._innerValue) {\n            if (v) {\n                this.hsva = this.service.stringToHsva(v);\n            }\n            this._innerValue = v;\n        }\n    }\n\n    /** Event emitted when the select has been opened. */\n    @Output() onOpen: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the select has been closed. */\n    @Output() onClose: EventEmitter<void> = new EventEmitter<void>();\n\n    @ViewChildren(TemplatePortalDirective) templatePortals: QueryList<Portal<any>>;\n    @ViewChildren(TemplatePortalDirective) templatePortal: Portal<any>;\n\n    constructor(private _element: ElementRef, private overlay: Overlay,\n        private _viewContainerRef: ViewContainerRef, private _renderer: Renderer,\n        private service: ColorpickerService, @Self() @Optional() public _control: NgControl) {\n        this._created = false;\n        if (this._control) {\n            this._control.valueAccessor = this;\n        }\n    }\n\n    ngOnDestroy() { this.destroyPanel(); }\n\n    /** Whether or not the overlay panel is open. */\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        this.panelOpen ? this.close() : this.open();\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        let hsva = this.service.stringToHsva(this.color);\n        if (hsva !== null) {\n            this.hsva = hsva;\n        } else {\n            this.hsva = this.service.stringToHsva(this._defalutColor);\n        }\n\n        this.sliderDim = new SliderDimension(245, 250, 130, 245);\n        this.slider = new SliderPosition(0, 0, 0, 0);\n        if (this.cFormat === 'rgb') {\n            this.format = 1;\n        } else if (this.cFormat === 'hsl') {\n            this.format = 2;\n        } else {\n            this.format = 0;\n        }\n\n        this.update();\n        if (this.disabled) { return; }\n        if (!this._isColorpickerVisible) {\n            this._initialColor = this.color;\n            this.update();\n            this._isColorpickerVisible = true;\n        } else {\n            this._isColorpickerVisible = false;\n        }\n\n        this._createOverlay();\n        this._overlayRef.attach(this.templatePortals.first);\n        this._subscribeToBackdrop();\n        this._panelOpen = true;\n        this.onOpen.emit();\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        this._panelOpen = false;\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this._backdropSubscription.unsubscribe();\n        }\n        this._isColorpickerVisible = false;\n        this.setColorFromString(this._innerValue);\n    }\n\n    /** Removes the panel from the DOM. */\n    destroyPanel(): void {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n\n            this._cleanUpSubscriptions();\n        }\n    }\n\n    _handleKeydown(event: KeyboardEvent) {\n        if (this.disabled) { return; }\n    }\n\n    _onFocus() {\n    }\n\n    _onBlur() {\n        if (!this.panelOpen) {\n            this._onTouched();\n        }\n    }\n    /**\n      * input event listner\n      * @param event\n      */\n    changeInput(event: any) {\n        let value = event.target.value;\n        this.colorpickerChange.emit(value);\n    }\n\n    /**\n    * set saturation,lightness,hue,alpha,RGB value\n    * @param val\n    * @param rg\n    */\n    setSaturation(val: { v: number, rg: number }) {\n        let hsla = this.service.hsva2hsla(this.hsva);\n        hsla.s = val.v / val.rg;\n        this.hsva = this.service.hsla2hsva(hsla);\n        this.update();\n    }\n\n    setLightness(val: { v: number, rg: number }) {\n        let hsla = this.service.hsva2hsla(this.hsva);\n        hsla.l = val.v / val.rg;\n        this.hsva = this.service.hsla2hsva(hsla);\n        this.update();\n    }\n\n    setHue(val: { v: number, rg: number }) {\n        this.hsva.h = val.v / val.rg;\n        this.update();\n    }\n\n    setAlpha(val: { v: number, rg: number }) {\n        this.hsva.a = val.v / val.rg;\n        this.update();\n    }\n\n    setR(val: { v: number, rg: number }) {\n        let rgba = this.service.hsvaToRgba(this.hsva);\n        rgba.r = val.v / val.rg;\n        this.hsva = this.service.rgbaToHsva(rgba);\n        this.update();\n    }\n    setG(val: { v: number, rg: number }) {\n        let rgba = this.service.hsvaToRgba(this.hsva);\n        rgba.g = val.v / val.rg;\n        this.hsva = this.service.rgbaToHsva(rgba);\n        this.update();\n    }\n    setB(val: { v: number, rg: number }) {\n        let rgba = this.service.hsvaToRgba(this.hsva);\n        rgba.b = val.v / val.rg;\n        this.hsva = this.service.rgbaToHsva(rgba);\n        this.update();\n    }\n    setSaturationAndBrightness(val: { s: number, v: number, pointX: number, pointY: number }) {\n        this.hsva.s = val.s / val.pointX;\n        this.hsva.v = val.v / val.pointY;\n        this.update();\n    }\n    clickOk() {\n        this._isColorpickerVisible = false;\n        this.color = this._innerValue;\n        if (this._innerValue != this._initialColor) {\n            this._emitChangeEvent();\n        }\n        this.close();\n    }\n\n    /**\n    * deselect recent color and close popup\n    */\n    cancelColor() {\n        this._innerValue = this._initialColor;\n        this.close();\n    }\n    isValidColor(str: string) {\n        return str.match(/^#[a-f0-9]{6}$/i) !== null;\n    }\n    /**\n       * set color\n       * @param value\n       */\n    setColorFromString(value: string) {\n        if (!this.isValidColor(value)) {\n            value = '#000000';\n            this.backColor = false;\n        }\n        let hsva = this.service.stringToHsva(value);\n        if (hsva !== null) {\n            this.hsva = hsva;\n        }\n        this.update();\n    }\n\n    formatPolicy(value: number) {\n        this.format = value;\n        if (this.format === 0 && this.hsva.a < 1) {\n            this.format++;\n        }\n        return this.format;\n    }\n\n    /**\n     * update color\n     */\n    update() {\n        let hsla = this.service.hsva2hsla(this.hsva);\n        let rgba = this.service.denormalizeRGBA(this.service.hsvaToRgba(this.hsva));\n        let hueRgba = this.service.denormalizeRGBA(this.service.hsvaToRgba(\n            new Hsva(this.hsva.h, 1, 1, 1)));\n\n        this.alphaColor = 'rgb(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ')';\n        this._hueSliderColor = 'rgb(' + hueRgba.r + ',' + hueRgba.g + ',' + hueRgba.b + ')';\n        this.hslaText = new Hsla(Math.round((hsla.h) * 360), Math.round(hsla.s * 100),\n            Math.round(hsla.l * 100), Math.round(hsla.a * 100) / 100);\n        this.rgbaText = new Rgba(rgba.r, rgba.g, rgba.b, Math.round(rgba.a * 100) / 100);\n        if (this.backColor) {\n            this.hexText = this.service.hexText(rgba);\n        }\n        this.backColor = true;\n        let colorCode = Math.round((this.rgbaText.r * 299 + this.rgbaText.g * 587 +\n            this.rgbaText.b * 114) / 1000);\n        if (colorCode >= 128 || this.hsva.a < 0.35) {\n            this.fontColor = 'black';\n            this.backAreaColor = 'rgba(0,0,0,.4)';\n        } else {\n            this.fontColor = 'white';\n            this.backAreaColor = 'rgba(255,255,255,.4)';\n        }\n\n        if (this.format === 0 && this.hsva.a < 1) {\n            this.format++;\n        }\n        this.outputColor = this.service.outputFormat(this.hsva, this.cFormat);\n        this.slider = new SliderPosition((this.hsva.h) * this.sliderDim.h,\n            this.hsva.s * this.sliderDim.s - 7, (1 - this.hsva.v) * this.sliderDim.v - 7,\n            this.hsva.a * this.sliderDim.a);\n        this._innerValue = this.outputColor;\n    }\n\n    isDescendant(parent: any, child: any) {\n        var node = child.parentNode;\n        while (node !== null) {\n            if (node === parent) {\n                return true;\n            }\n            node = node.parentNode;\n        }\n        return false;\n    }\n\n\n    /** Emits an event when the user selects a color. */\n    _emitChangeEvent(): void {\n        this._onChange(this.color);\n        this.change.emit(new Md2ColorChange(this, this.color));\n        this._innerValue = this.color;\n    }\n    writeValue(value: any): void {\n        this._innerValue = value;\n        this.color = value;\n    }\n\n    registerOnChange(fn: (value: any) => void): void { this._onChange = fn; }\n\n    registerOnTouched(fn: () => {}): void { this._onTouched = fn; }\n\n    private _subscribeToBackdrop(): void {\n        this._backdropSubscription = this._overlayRef.backdropClick().subscribe(() => {\n            this._innerValue = this._initialColor;\n            this.close();\n        });\n    }\n\n    /**\n     *  This method creates the overlay from the provided panel's template and saves its\n     *  OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): void {\n        if (!this._overlayRef) {\n            let config = new OverlayState();\n            config.positionStrategy = this.overlay.position()\n                .global()\n                .centerHorizontally()\n                .centerVertically();\n            config.hasBackdrop = true;\n            config.backdropClass = 'cdk-overlay-dark-backdrop';\n\n            this._overlayRef = this.overlay.create(config);\n        }\n    }\n\n    private _cleanUpSubscriptions(): void {\n        if (this._backdropSubscription) {\n            this._backdropSubscription.unsubscribe();\n        }\n        if (this._positionSubscription) {\n            this._positionSubscription.unsubscribe();\n        }\n    }\n\n}\n\nexport class Hsva {\n    constructor(public h: number, public s: number, public v: number, public a: number) { }\n}\nexport class Hsla {\n    constructor(public h: number, public s: number, public l: number, public a: number) { }\n}\nexport class Rgba {\n    constructor(public r: number, public g: number, public b: number, public a: number) { }\n}\nexport class SliderPosition {\n    constructor(public h: number, public s: number, public v: number, public a: number) { }\n}\nexport class SliderDimension {\n    constructor(public h: number, public s: number, public v: number, public a: number) { }\n}\n\nexport const MD2_COLORPICKER_DIRECTIVES = [\n    Md2Colorpicker, ColorpickerSliderDirective, TextDirective\n];\n\n@NgModule({\n    declarations: MD2_COLORPICKER_DIRECTIVES,\n    imports: [CommonModule, FormsModule, OverlayModule, PortalModule],\n    exports: MD2_COLORPICKER_DIRECTIVES\n})\nexport class Md2ColorpickerModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: Md2ColorpickerModule,\n            providers: [ColorpickerService]\n        };\n    }\n}\n"]}