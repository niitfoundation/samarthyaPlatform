version: '2'
services:

  candidate:
    image: samarthya/samarthya:v1.0.0
    build:
      context: ./
      dockerfile: Dockerfile
    network_mode: host
    restart: always
    ports:
      - "8080:8080"
    environment:
      - KAFKA_HOST_IP=172.18.0.3
    depends_on:
      - mongodb
      - neo4j
      - zookeeper
      - kafka
    entrypoint:
      - /bin/sh
      - -c
      - 'npm run candidate'

  placement:
    image: samarthya/samarthya:v1.0.0
    build:
      context: ./
      dockerfile: Dockerfile
    network_mode: host
    restart: always
    ports:
      - "3000:3000"
    environment:
      - KAFKA_HOST_IP=172.18.0.3
    depends_on:
      - mongodb
      - neo4j
      - zookeeper
      - kafka
    entrypoint:
      - /bin/sh
      - -c
      - 'npm run placement'

  jobpreference:
    image: samarthya/samarthya:v1.0.0
    build:
      context: ./
      dockerfile: Dockerfile
    network_mode: host
    restart: always
    environment:
      - KAFKA_HOST_IP=172.18.0.3
    depends_on:
      - mongodb
      - neo4j
      - zookeeper
      - kafka
    entrypoint:
      - /bin/sh
      - -c
      - 'npm run jpref-analyzer'

  workexperience:
    image: samarthya/samarthya:v1.0.0
    build:
      context: ./
      dockerfile: Dockerfile
    network_mode: host
    restart: always
    environment:
      - KAFKA_HOST_IP=172.18.0.3
    depends_on:
      - mongodb
      - neo4j
      - zookeeper
      - kafka
    entrypoint:
      - /bin/sh
      - -c
      - 'npm run wexp-analyzer'

  project:
    image: samarthya/samarthya:v1.0.0
    build:
      context: ./
      dockerfile: Dockerfile
    network_mode: host
    restart: always
    environment:
      - KAFKA_HOST_IP=172.18.0.3
    depends_on:
      - mongodb
      - neo4j
      - zookeeper
      - kafka
    entrypoint:
      - /bin/sh
      - -c
      - 'npm run proj-analyzer'

  qualification:
    image: samarthya/samarthya:v1.0.0
    build:
      context: ./
      dockerfile: Dockerfile
    network_mode: host
    restart: always
    environment:
      - KAFKA_HOST_IP=172.18.0.3
    depends_on:
      - mongodb
      - neo4j
      - zookeeper
      - kafka
    entrypoint:
      - /bin/sh
      - -c
      - 'npm run qual-analyzer'

  skill:
    image: samarthya/samarthya:v1.0.0
    build:
      context: ./
      dockerfile: Dockerfile
    network_mode: host
    restart: always
    environment:
      - KAFKA_HOST_IP=172.18.0.3
    depends_on:
      - mongodb
      - neo4j
      - zookeeper
      - kafka
    entrypoint:
      - /bin/sh
      - -c
      - 'npm run skill-analyzer'

  userregister:
    image: samarthya/samarthya:v1.0.0
    build:
      context: ./
      dockerfile: Dockerfile
    network_mode: host
    restart: always
    environment:
      - KAFKA_HOST_IP=172.18.0.3
    depends_on:
      - mongodb
      - neo4j
      - zookeeper
      - kafka
    entrypoint:
      - /bin/sh
      - -c
      - 'npm run usrreg-analyzer'

  profileinfo:
    image: samarthya/samarthya:v1.0.0
    build:
      context: ./
      dockerfile: Dockerfile
    network_mode: host
    restart: always
    environment:
      - KAFKA_HOST_IP=172.18.0.3
    depends_on:
      - mongodb
      - neo4j
      - zookeeper
      - kafka
    entrypoint:
      - /bin/sh
      - -c
      - 'npm run prinfo-analyzer'

  mongodb:
    image: mvertes/alpine-mongo
    network_mode: host
    restart: always
    volumes:
      - /data:/data/db
    expose:
      - 27017

  neo4j:
    image: neo4j:3.0.7
    network_mode: host
    restart: always
    environment:
      - NEO4J_AUTH=neo4j/password
    cap_add:
      - SYS_RESOURCE
    volumes:
      - ./neo4j/data:/data
    expose:
      - 7474
      - 7687
      - 1337
    ports:
      - "7474:7474"

  zookeeper:
    image: wurstmeister/zookeeper
    network_mode: host
    restart: always
    expose:
      - 2181

  kafka:
    image: wurstmeister/kafka
    network_mode: host
    restart: always
    expose:
      - 9092
    links:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.18.0.3
      KAFKA_CREATE_TOPICS: "personalInfo:1:1,userRegistration:1:1,experiences:1:1,projects:1:1,qualifications:1:1,jobPreferences:1:1,skills:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

